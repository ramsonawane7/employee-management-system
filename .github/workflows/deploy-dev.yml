name: Build & Deploy EMS Service (Dev)

on:
  push:
    branches: [ "auth" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'deploy-dev')

    steps:
      #  Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      #  Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      #  Auto-increment version + build JAR
      - name: Auto-increment version and build
        id: build
        run: |
          BASE_VERSION="1.0.0"
          BUILD_NUMBER=$(date +%s)
          VERSION="v1.${GITHUB_RUN_NUMBER}.${BUILD_NUMBER}"
          echo " Building version: ems-${VERSION}.jar"

          mvn clean package -DskipTests

          # Try renaming either *-SNAPSHOT.jar or any jar file
          mv target/*-SNAPSHOT.jar target/ems-${VERSION}.jar 2>/dev/null || mv target/*.jar target/ems-${VERSION}.jar

          echo "JAR_FILE=target/ems-${VERSION}.jar" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      #  Setup SSH Agent
      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      #  Ensure server folders exist
      - name: Ensure backend folder exists
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} \
          "mkdir -p /home/ubuntu/services/backend/versions /home/ubuntu/services/backend/symlink/ems"

      #  Copy JAR to Ubuntu server
      - name: Upload JAR to server
        run: |
          echo "Uploading JAR to server..."
          scp -o StrictHostKeyChecking=no ${{ env.JAR_FILE }} \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/home/ubuntu/services/backend/versions/ems/

      #  Update symlink, cleanup, and restart service
      - name: Update symlink and restart EMS service
        run: |
          echo " Updating symlink and restarting EMS service..."
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            set -e
            cd /home/ubuntu/services/backend

            # Find latest JAR
            LATEST_JAR=$(ls -t versions/ems/ems-v1.*.jar | head -n 1)
            echo " Latest build: $LATEST_JAR"

            # Update symlink
            ln -sf "/home/ubuntu/services/backend/$LATEST_JAR" /home/ubuntu/services/backend/symlink/ems/ems.jar
            echo "Symlink updated to $LATEST_JAR"

            # Keep only 5 latest JARs
            echo " Cleaning old builds..."
            ls -t versions/ems-v1.*.jar | tail -n +6 | xargs -r rm -f

            # Restart EMS service
            echo " Restarting EMS service..."
            sudo systemctl daemon-reload
            sudo systemctl enable ems.service
            sudo systemctl restart ems.service

            # Show status
            echo " Checking service status..."
            sudo systemctl status ems.service --no-pager || true

            echo " Deployment completed successfully for $LATEST_JAR"
          EOF
